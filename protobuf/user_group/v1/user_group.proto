syntax = "proto3";

package snack.user_group.v1;

import "google/protobuf/empty.proto";

option go_package = "github.com/ritscc/Snack/backend/pb/user_group/v1;user_group";

service UserGroupService {
  rpc CreateUserGroup(CreateUserGroupRequest) returns (google.protobuf.Empty) {}
  rpc GetUserGroup(UserGroupID) returns (UserGroup) {}
  rpc UpdateUserGroup(UpdateUserGroupRequest) returns (google.protobuf.Empty) {}
  rpc DeleteUserGroup(UserGroupID) returns (google.protobuf.Empty) {}
}

message UserGroup {
  int64 group_id = 1; // UserGroupID (unique)
  string name = 2; // UserGroupName
  string description = 3;
  string type = 4; // SystemAdmin or Community
  string icon = 5; // UserGroupIcon
  string role = 6;
  repeated Member member = 10; // Users who belong to UserGroup
}

message UserGroupID {
  int64 group_id = 1; // UserGroupID
}

message CreateUserGroupRequest {
  string name = 1; // UserGroupName
  string description = 2;
  string type = 3; // SystemAdmin or Community
  string icon = 4; // UserGroupIcon
  string role = 5;
  repeated Member member = 10; // Users who belong to UserGroup
}

message UpdateUserGroupRequest {
  int64 group_id = 1; // UserGroupID
  string name = 2; // UserGroupName
  string description = 3;
  string type = 4; // SystemAdmin or Community
  string icon = 5; // UserGroupIcon
  string role = 6;
  repeated Member member = 10; // Users who belong to UserGroup
}

service MemberService {
  rpc AddUserToMember(Member) returns (google.protobuf.Empty) {}
  rpc RemoveUserFromMember(RemoveUserFromMemberRequest) returns (google.protobuf.Empty) {}
  rpc ChangeMemberGrant(Member) returns (google.protobuf.Empty) {}
}

message Member {
  int64 group_id = 1; // UserGroupID
  int64 user_id = 2; // UserID
  string grant = 3; // Role in UserGroup
}

message RemoveUserFromMemberRequest {
  int64 group_id = 1; // UserGroupID
  int64 user_id = 2; // UserID of the User to be deleted
}
